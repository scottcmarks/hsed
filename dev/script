:load dev/DevMain.hs
:set -fno-warn-type-defaults
:set -fno-warn-unused-imports
:set -XDataKinds
:set -XTemplateHaskell
:set -XQuasiQuotes
:set -XOverloadedStrings

import System.IO
putStrLn "loading script ..."
--------------------------------------------------------------------------------

import           Language.Haskell.TH
import           Language.Haskell.TH.Ppr
import           Language.Haskell.TH.PprLib
import           Data.Attoparsec.ByteString.Char8(isEndOfLine)
import           Data.ByteString(ByteString)
import           Data.Either(fromRight)
import           Data.Function(($),(&))
import           Data.Functor((<$>),(<&>))
import           Data.String(String, fromString)
import           System.SED.Common.TableUIDs
import           Data.Attoparsec.ByteString hiding(parse)
import           Data.Attoparsec.ByteString.Char8(parse,skipSpace)
import           GHC.Base(pure,(.),(<*),(<*>),(*>),(>>=))
import           GHC.Err(error)
import           GHC.Show(Show(..))
import           Data.ByteString.Char8(pack)
import           GHC.Classes(Ord(..))


import           System.SED.Common.UID

import           System.SED.Common.THUtil
import           System.SED.Common.ColumnTypes.TH

pQ = (ppr <$>) . runQ
showQ = (\h -> h & pQ <&> show >>= putStrLn)

import Text.Heredoc

pT = ppr . ttypeDecs

:{
table50 = [here|

                     Table 50 ACL
    +-----------------------+-----+--------------+
    |UID                    |Name |Format        |
    +-----------------------+-----+--------------+
    |00 00 00 05 00 00 08 02|ACL  |List_Type,    |
    |                       |     |*,            |
    |                       |     |ACE_object_ref|
    +-----------------------+-----+--------------+

|] :: String
:}

putStrLn "table50 ====>"
pT table50


:{
table51 = [here|

                     Table 51 adv_key_mode
    +-----------------------+------------+-----------------+
    |UID                    |Name        |Format           |
    +-----------------------+------------+-----------------+
    |00 00 00 05 00 00 04 0F|adv_key_mode|Enumeration_Type,|
    |                       |            |0,               |
    |                       |            |7                |
    +-----------------------+------------+-----------------+

|] :: String
:}
putStrLn "table51 ====>"
pT table51

-- pE = ppr . tenumDecs

:{
table52 = [here|

     Table 52 adv_key_mode Enumeration Values
    +------------------+---------------------+
    |Enumeration Value |Behavior             |
    +------------------+---------------------+
    |0                 |Wait for AdvKey_Req  |
    +------------------+---------------------+
    |1                 |Auto-advance keys    |
    +------------------+---------------------+
    |2-7               |Reserved             |
    +------------------+---------------------+

|] :: String
:}
-- putStrLn "table52 ====>"
-- pE table52
putStrLn "table52 ="
putStrLn table52

bs52 = pack table52
putStrLn "Buh-bye now."

--------------------------------------------------------------------------------
import GHC.Base(const, (++))
:def! $ (pure . (":! bash -l -c " ++) . show)
:def! B (pure . (":! bash -l -c \"stack build\"" ++) . show)
:def! D (pure . const (":set -ddump-splices") )
:def! H (pure . (":! bash -l -c \"./h\"" ++) . show)
:def! P (pure . (":! bash -l -c \"./hp\"" ++) . show)
putStrLn ".. script loaded."
