:load dev/DevMain.hs
:set -fno-warn-type-defaults
:set -fno-warn-unused-imports
:set -XDataKinds
:set -XOverloadedStrings
:set -XTemplateHaskell
:set -XQuasiQuotes

import System.IO
putStrLn "loading script ..."
--------------------------------------------------------------------------------

$( [| putStrLn "This is hsed!" |] )  -- $([|..|]) is a sort of identity


import           Language.Haskell.TH
import           Language.Haskell.TH.Ppr
import           Language.Haskell.TH.PprLib
import           Data.Attoparsec.ByteString.Char8(isEndOfLine)
import           Data.ByteString(ByteString)
import           Data.Either(fromRight)
import           Data.Function(($),(&))
import           Data.Functor((<$>),(<&>))
import           Data.String(String, fromString)
import           System.SED.Common.TableUIDs
import           Data.Attoparsec.ByteString hiding(parse)
import           Data.Attoparsec.ByteString.Char8(parse,skipSpace)
import           GHC.Base(pure,(.),(<*),(<*>),(*>),(>>=))
import           GHC.Err(error)
import           GHC.Show(Show(..))
import           System.SED.Common.UID

import           System.SED.Common.THUtil
import           System.SED.Common.ColumnTypes.TH

pQ = (ppr <$>) . runQ
hw = [| putStrLn "Hello, world!" |]
pQ hw

$( hw )  -- echoed by -ddump-splices

showQ = (\h -> h & pQ <&> show >>= putStrLn)
hw & showQ

import Text.Heredoc


:{
table50 = [here|

                     Table 50 ACL
    +-----------------------+-----+--------------+
    |UID                    |Name |Format        |
    +-----------------------+-----+--------------+
    |00 00 00 05 00 00 08 02|ACL  |List_Type,    |
    |                       |     |*,            |
    |                       |     |ACE_object_ref|
    +-----------------------+-----+--------------+

|] :: String
:}

putStrLn "table50 ====>"
ppr $ ttypeDecs table50


:{
table51 = [here|
                     Table 51 adv_key_mode
    +-----------------------+------------+-----------------+
    |UID                    |Name        |Format           |
    +-----------------------+------------+-----------------+
    |00 00 00 05 00 00 04 0F|adv_key_mode|Enumeration_Type,|
    |                       |            |0,               |
    |                       |            |7                |
    +-----------------------+------------+-----------------+
|] :: String
:}
putStrLn "table51 ====>"
ppr $ ttypeDecs table51



putStrLn "Buh-bye now."

--------------------------------------------------------------------------------
import GHC.Base(const, (++))
:def! $ (pure . (":! bash -l -c " ++) . show)
:def! B (pure . (":! bash -l -c \"stack build\"" ++) . show)
:def! D (pure . const (":set -ddump-splices") )
:def! H (pure . (":! bash -l -c \"./h\"" ++) . show)
:def! P (pure . (":! bash -l -c \"./hp\"" ++) . show)
putStrLn ".. script loaded."
